version: "3.8"

services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - app-network
    depends_on:
      - fastapi
    restart: unless-stopped
  
  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - app-network
    restart: unless-stopped
    environment:
      - staging=1

  fastapi:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastapi
    restart: unless-stopped
    ports:
      - "8000:8000"
    depends_on:
      - redis
    environment:
      - REDIS_URL=redis://redis:6379
    volumes:
      - .:/app
    working_dir: /app
    command: gunicorn --workers 7 -b 0.0.0.0:8000 -k uvicorn.workers.UvicornWorker app.main:app
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    volumes:
      - ./redis/data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    expose:
      - 6379
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - app-network

networks:
  app-network:
    driver: bridge